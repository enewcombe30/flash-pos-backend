generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Allergen {
  id                  Int                  @id @default(autoincrement())
  name                String               @unique
  ingredientAllergens IngredientAllergen[]
  RecipeAllergen      RecipeAllergen[]
}

model Division {
  id           Int           @id @default(autoincrement())
  name         String
  description  String?
  ingredients  Ingredient[]
  subDivisions SubDivision[]
}

model SubDivision {
  id         Int      @id @default(autoincrement())
  name       String
  divisionId Int      @map("division_id")
  recipes    Recipe[]
  division   Division @relation(fields: [divisionId], references: [id])
}

model Tag {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  ingredientTags IngredientTag[]
}

model Ingredient {
  id                    Int                    @id @default(autoincrement())
  name                  String
  unit                  String
  metricValue           Float                  @map("metric_value")
  divisionId            Int                    @map("division_id")
  division              Division               @relation(fields: [divisionId], references: [id])
  ingredientAllergens   IngredientAllergen[]
  ingredientDietaryTags IngredientDietaryTag[]
  ingredientTags        IngredientTag[]
  RecipeIngredient      RecipeIngredient[]
}

model IngredientAllergen {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  allergenId   Int
  allergen     Allergen   @relation(fields: [allergenId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  @@unique([ingredientId, allergenId], map: "IngredientAllergen_unique")
}

model IngredientTag {
  id           Int        @id @default(autoincrement())
  ingredientId Int
  tagId        Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  tag          Tag        @relation(fields: [tagId], references: [id], map: "IngredientTag_tagId_fkey")
}

model Recipe {
  name              String
  subDivisionId     Int
  version           Int
  costPrice         Float?
  salesPrice        Float?
  id                Int                @id @default(autoincrement())
  orderItems        OrderItem[]
  subDivision       SubDivision        @relation(fields: [subDivisionId], references: [id])
  recipeAllergens   RecipeAllergen[]
  recipeDietaryTags RecipeDietaryTag[]
  RecipeIngredient  RecipeIngredient[]
}

model RecipeAllergen {
  recipeId   Int
  allergenId Int
  allergen   Allergen @relation(fields: [allergenId], references: [id])
  recipe     Recipe   @relation(fields: [recipeId], references: [id])

  @@id([recipeId, allergenId])
}

model RecipeDietaryTag {
  recipeId     Int
  dietaryTagId Int
  dietaryTag   DietaryTag @relation(fields: [dietaryTagId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])

  @@id([recipeId, dietaryTagId])
}

model RecipeIngredient {
  amount       Float
  ingredientId Int
  recipeId     Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])

  @@id([recipeId, ingredientId])
}

model DietaryTag {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @unique
  IngredientDietaryTag IngredientDietaryTag[]
  RecipeDietaryTag     RecipeDietaryTag[]
}

model IngredientDietaryTag {
  dietaryTagId Int
  ingredientId Int
  dietaryTag   DietaryTag @relation(fields: [dietaryTagId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])

  @@id([ingredientId, dietaryTagId])
}

model Order {
  createdAt DateTime    @default(now())
  id        Int         @id @default(autoincrement())
  items     OrderItem[]
}

model OrderItem {
  recipeId Int
  id       Int    @id @default(autoincrement())
  orderId  Int
  order    Order  @relation(fields: [orderId], references: [id])
  recipe   Recipe @relation(fields: [recipeId], references: [id])
}
